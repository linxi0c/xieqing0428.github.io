<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[Flink电商团购项目（一）]]></title>
    <url>%2Fposts%2F451f3483%2F</url>
    <content type="text"><![CDATA[Flink项目环境搭建第一章 大数据集群搭建Flink集群环境系统CentOS-7-x86_64-Minimal-1810.isoflink-master1 192.168.69.121 2core 2Gflink-master2 192.168.69.122 2core 2Gflink-slave1 192.168.69.123 1core 2Gflink-slave2 192.168.69.124 1core 2Gflink-slave3 192.168.69.125 1core 2GHadoop集群组件列表组件Master1Master2Slave1Slave2Slave3jdk1.8.0_212√√√√√scala-2.11.12√√√√√miniconda3√√√√√hadoop2.7.0√√√√√kafka0.11√√√√√mariadb/mariadb-server√√Hive2.2.0√√zookeeper 3.4.9√√√Flume1.9√√√√√Flink1.7√√√√√组件安装步骤参考往期系列文章Flink电商团购项目（零）Hadoop环境搭建推荐文章:Hadoop 集群搭建(一)：节点配置傻瓜式CDH集群部署指南通行证项目前端开发小结拾贝电台开源了]]></content>
      <categories>
        <category>技术</category>
        <category>大数据</category>
        <category>项目实战</category>
        <category>Flink电商团购</category>
        <category>01-大数据集群搭建</category>
      </categories>
      <tags>
        <tag>BigData</tag>
        <tag>Flink</tag>
        <tag>项目</tag>
        <tag>电商</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[傻瓜式CDH集群部署指南]]></title>
    <url>%2Fposts%2F5578f504%2F</url>
    <content type="text"><![CDATA[CDH环境配置单机内存最低8GCloudera集群环境系统CentOS-7-x86_64-Minimal-1810.isocdh-master 192.168.69.111 4core 16Gcdh-slave1 192.168.69.112 4core 8Gcdh-slave2 192.168.69.113 4core 8G关闭防火墙及修改hosts永久关闭内核防火墙：vim /etc/selinux/config12# 修改如下信息SELINUX=disabled关闭系统防火墙：停止firewallsystemctl stop firewalld.service禁止firewall开机启动systemctl disable firewalld.service修改hosts文件vim /etc/hosts1234# 添加如下信息192.168.69.111 cdh-master 192.168.69.112 cdh-slave1 192.168.69.113 cdh-slave2SSH互信生成密钥对（公钥和私钥）ssh-keygen -t rsa -P &#39;&#39;追加authorized_keys1234567# 追加authorized_keyscat ~/.ssh/id_rsa.pub &gt; ~/.ssh/authorized_keys# 修改权限chmod g-w ~chmod 700 ~/.ssh chmod 600 ~/.ssh/authorized_keys追加密钥到Masterssh cdh-slave1 cat ~/.ssh/id_rsa.pub &gt;&gt; ~/.ssh/authorized_keysssh cdh-slave2 cat ~/.ssh/id_rsa.pub &gt;&gt; ~/.ssh/authorized_keys复制密钥到从节点scp ~/.ssh/authorized_keys cdh-slave1:~/.ssh/authorized_keysscp ~/.ssh/authorized_keys cdh-slave2:~/.ssh/authorized_keysntp时间同步所有节点安装相关ntp组件yum -y install ntp所有节点设置时区timedatectl set-timezone Asia/Shanghai启动ntp，以及设置开机启动12345# 启动ntpsystemctl start ntpd# 设置开机启动systemctl enable ntpd配置ntp服务器(master节点)vim /etc/ntp.conf12345678910# 修改如下几行#server 0.centos.pool.ntp.org iburst#server 1.centos.pool.ntp.org iburst#server 2.centos.pool.ntp.org iburst#server 3.centos.pool.ntp.org iburst# 添加如下几行restrict 192.168.69.2 mask 255.255.255.0 nomodify notrapserver 127.127.1.0fudge 127.127.1.0 stratum 10配置ntp服务器(slave节点)vim /etc/ntp.conf123456789# 修改如下几行#server 0.centos.pool.ntp.org iburst#server 1.centos.pool.ntp.org iburst#server 2.centos.pool.ntp.org iburst#server 3.centos.pool.ntp.org iburst# 添加如下几行(master节点)restrict 192.168.69.2 mask 255.255.255.0 nomodify notrapserver 192.168.69.111重启ntp服务systemctl restart ntpd主节点定时服务crontab -e10-59/10 * * * * /usr/sbin/ntpdate -u asia.pool.ntp.org手动同步master的时间ntpdate -u 192.168.69.111查看同步状态ntpstat配置Cloudera rpm仓库下载repo文件sudo wget https://archive.cloudera.com/cm6/6.2.0/redhat7/yum/cloudera-manager.repo -P /etc/yum.repos.d/使用GPG key导入仓库sudo rpm --import https://archive.cloudera.com/cm6/6.2.0/redhat7/yum/RPM-GPG-KEY-cloudera下载parcel文件mkdir -p /opt/cloudera/parcel-repo/sudo wget https://archive.cloudera.com/cdh6/6.2.0/parcels/CDH-6.2.0-1.cdh6.2.0.p0.967373-el7.parcel /opt/cloudera/parcel-repo/sudo wget https://archive.cloudera.com/cdh6/6.2.0/parcels/CDH-6.2.0-1.cdh6.2.0.p0.967373-el7.parcel.sha256 /opt/cloudera/parcel-repo/sudo wget https://archive.cloudera.com/cdh6/6.2.0/parcels/manifest.json /opt/cloudera/parcel-repo/安装 Java（64-bit）卸载掉自带的 OpenJdkrpm -qa | grep java使用Cloudera Manager 安装 Javasudo yum -y install oracle-j2sdk1.8设置环境变量vim /etc/profile1234# SET JAVA PATH export JAVA_HOME=/usr/java/jdk1.8.0_181-cloudera/export CLASSPATH=.:$CLASSPATH:$JAVA_HOME/lib export PATH=$PATH:$JAVA_HOME/binsource /etc/profileyum update报错Error: Delta RPMs disabled because /usr/bin/applydeltarpm not installed.123# 安装deltarpmyum provides '*/applydeltarpm'yum install deltarpm安装Cloudera Manager Server安装Cloudera Manager包sudo yum -y install cloudera-manager-daemons cloudera-manager-agent cloudera-manager-serverPs：可以在https://archive.cloudera.com/cm6/6.2.0/redhat7/yum/RPMS/x86_64/提前下好rpm包进行安装。启用Auto-TLS待续安装和配置数据库MariaDB for Cloudera Software(master节点)安装MariaDBsudo yum -y install mariadb-server配置MariaDBvim /etc/my.cnf1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859[mysqld]datadir=/var/lib/mysqlsocket=/var/lib/mysql/mysql.socktransaction-isolation = READ-COMMITTED# Disabling symbolic-links is recommended to prevent assorted security risks;# to do so, uncomment this line:symbolic-links = 0# Settings user and group are ignored when systemd is used.# If you need to run mysqld under a different user or group,# customize your systemd unit file for mariadb according to the# instructions in http://fedoraproject.org/wiki/Systemdkey_buffer = 16Mkey_buffer_size = 32Mmax_allowed_packet = 32Mthread_stack = 256Kthread_cache_size = 64query_cache_limit = 8Mquery_cache_size = 64Mquery_cache_type = 1max_connections = 550#expire_logs_days = 10#max_binlog_size = 100M#log_bin should be on a disk with enough free space.#Replace '/var/lib/mysql/mysql_binary_log' with an appropriate path for your#system and chown the specified folder to the mysql user.log_bin=/var/lib/mysql/mysql_binary_log#In later versions of MariaDB, if you enable the binary log and do not set#a server_id, MariaDB will not start. The server_id must be unique within#the replicating group.server_id=1binlog_format = mixedread_buffer_size = 2Mread_rnd_buffer_size = 16Msort_buffer_size = 8Mjoin_buffer_size = 8M# InnoDB settingsinnodb_file_per_table = 1innodb_flush_log_at_trx_commit = 2innodb_log_buffer_size = 64Minnodb_buffer_pool_size = 4Ginnodb_thread_concurrency = 8innodb_flush_method = O_DIRECTinnodb_log_file_size = 512M[mysqld_safe]log-error=/var/log/mariadb/mariadb.logpid-file=/var/run/mariadb/mariadb.pid## include all files from the config directory#!includedir /etc/my.cnf.d启动MariaDB开机启动MariaDBsudo systemctl enable mariadb启动MariaDB服务sudo systemctl start mariadb安全设置sudo /usr/bin/mysql_secure_installation1234567891011121314151617181920[...]Enter current password for root (enter for none):OK, successfully used password, moving on...[...]Set root password? [Y/n] YNew password: 123Re-enter new password: 123[...]Remove anonymous users? [Y/n] Y[...]Disallow root login remotely? [Y/n] Y[...]Remove test database and access to it [Y/n] Y[...]Reload privilege tables now? [Y/n] Y[...]All done! If you've completed all of the above steps, your MariaDBinstallation should now be secure.Thanks for using MariaDB!安装MySQL JDBC Driver for MariaDB下载驱动包wget https://dev.mysql.com/get/Downloads/Connector-J/mysql-connector-java-5.1.46.tar.gz解压驱动包tar zxvf mysql-connector-java-5.1.46.tar.gzrm -rf mysql-connector-java-5.1.46.tar.gz复制驱动包sudo mkdir -p /usr/share/java/cd mysql-connector-java-5.1.46sudo cp mysql-connector-java-5.1.46-bin.jar /usr/share/java/mysql-connector-java.jar创建数据库登录root账户mysql -uroot -p创建hive数据库CREATE DATABASE metastore DEFAULT CHARACTER SET utf8 DEFAULT COLLATE utf8_general_ci;CREATE DATABASE scm DEFAULT CHARACTER SET utf8 DEFAULT COLLATE utf8_general_ci;CREATE DATABASE oozie DEFAULT CHARACTER SET utf8 DEFAULT COLLATE utf8_general_ci;CREATE DATABASE hue DEFAULT CHARACTER SET utf8 DEFAULT COLLATE utf8_general_ci;创建账户GRANT ALL ON metastore.* TO &#39;hive&#39;@&#39;%&#39; IDENTIFIED BY &#39;123&#39;;GRANT ALL ON scm.* TO &#39;scm&#39;@&#39;%&#39; IDENTIFIED BY &#39;123&#39;;GRANT ALL ON oozie.* TO &#39;oozie&#39;@&#39;%&#39; IDENTIFIED BY &#39;123&#39;;GRANT ALL ON hue.* TO &#39;hue&#39;@&#39;%&#39; IDENTIFIED BY &#39;123&#39;;刷新权限flush privileges;查看数据库SHOW DATABASES;查看权限SHOW GRANTS FOR &#39;hive&#39;@&#39;%&#39;;设置Cloudera Manager数据库(master节点)设置语法sudo /opt/cloudera/cm/schema/scm_prepare_database.sh mysql scm scm 123准备数据库sudo /opt/cloudera/cm/schema/scm_prepare_database.sh mysql scm scm安装CDH及其他软件[强烈建议]所有节点拍摄快照启动Cloudera Manager Server(master节点)sudo systemctl start cloudera-scm-server查看日志(master节点)sudo tail -f /var/log/cloudera-scm-server/cloudera-scm-server.log直至出现INFO WebServerImpl:com.cloudera.server.cmf.WebServerImpl: Started Jetty server.登录web页面http://cdh-master:7180账户：admin密码：admin安装组件接受最终用户许可条款和条件选择Cloudera Express免费版集群安装Cluster BasicsCDHSpecify Hosts输入cdh-master, cdh-slave1, cdh-slave2点击’搜索’选择存储库选择Public Cloudera Repository选择Parcels其他默认JDK 安装选项选中安装 Oracle Java SE 开发工具包 (JDK)设置登录凭据选择root输入密码安装agents安装ParcelsInspect Hosts虚拟内存设置12sysctl -w vm.swappiness=10echo vm.swappiness = 10 &gt;&gt; /etc/sysctl.conf大内存页设置1234567891011# 临时echo never&gt;/sys/kernel/mm/transparent_hugepage/defragecho never&gt;/sys/kernel/mm/transparent_hugepage/enabled# 永久vim /etc/rc.local# 加入如下信息echo never&gt;/sys/kernel/mm/transparent_hugepage/defragecho never&gt;/sys/kernel/mm/transparent_hugepage/enabled# 设置权限chmod +x /etc/rc.d/rc.local组件列表组件版本Supervisord3.0Cloudera Manager Agent6.2.0Cloudera Manager Management Daemon6.2.0Flume NG1.9.0+cdh6.2.0Hadoop3.0.0+cdh6.2.0HDFS3.0.0+cdh6.2.0HttpFS3.0.0+cdh6.2.0hadoop-kms3.0.0+cdh6.2.0MapReduce 23.0.0+cdh6.2.0YARN3.0.0+cdh6.2.0HBase2.1.0+cdh6.2.0Lily HBase Indexer1.5+cdh6.2.0Hive2.1.1+cdh6.2.0HCatalog2.1.1+cdh6.2.0Hue4.2.0+cdh6.2.0Impala3.2.0+cdh6.2.0Java 81.8.0_181Kafka2.1.0+cdh6.2.0Kite（仅限 CDH 5 ）1.0.0+cdh6.2.0kudu1.9.0+cdh6.2.0Oozie5.1.0+cdh6.2.0Parquet1.9.0+cdh6.2.0Pig0.17.0+cdh6.2.0sentry2.1.0+cdh6.2.0Solr7.4.0+cdh6.2.0spark2.4.0+cdh6.2.0Sqoop1.4.7+cdh6.2.0ZooKeeper3.4.5+cdh6.2.0使用向导设置群集选择服务选择所有服务选择HBase HDFS Hive Hue Kafka Oozie YARN(MR2 Included) ZooKeeper自定义角色分配默认数据库设置HiveMySQL &gt; 否 &gt; cdh-master &gt; metastore &gt; hive &gt; 123OozieMySQL &gt; cdh-master &gt; oozie &gt; oozie &gt; 123HueMySQL &gt; cdh-master &gt; hue &gt; hue &gt; 123审核更改默认命令详细信息Ps：若搭建过程中多次尝试安装，建议删除/dfs/nn下文件，避免HDFS服务报错汇总错误排查推荐链接 &gt;&gt; https://blog.csdn.net/zzq900503/article/details/53393721推荐文章:Flink电商团购项目（一）Hadoop 集群搭建(一)：节点配置]]></content>
      <categories>
        <category>技术</category>
        <category>大数据</category>
        <category>CDH</category>
      </categories>
      <tags>
        <tag>BigData</tag>
        <tag>CDH环境搭建</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hadoop 集群搭建(一)：节点配置]]></title>
    <url>%2Fposts%2Fb7d573f0%2F</url>
    <content type="text"><![CDATA[虚拟机节点配置Hello, BigData集群环境系统：CentOS-7-x86_64-Minimal-1810.isoMaster 192.168.69.101Slave1 192.168.69.102Slave2 192.168.69.103修改IP地址：vim /etc/sysconfig/network-scripts/ifcfg-ens33Master12345# 修改如下信息IPADDR=192.168.69.101 NETMASK=255.255.255.0 GATEWAY=192.168.69.2 DNS1=119.29.29.29仅在Slave112345# 修改如下信息IPADDR=192.168.69.102 NETMASK=255.255.255.0 GATEWAY=192.168.69.2 DNS1=119.29.29.29仅在Slave212345# 修改如下信息IPADDR=192.168.69.103 NETMASK=255.255.255.0 GATEWAY=192.168.69.2 DNS1=119.29.29.29关闭系统防火墙及内核防火墙永久关闭内核防火墙：yum -y install vimvim /etc/selinux/config12# 修改如下信息SELINUX=disabled停止firewall：systemctl stop firewalld.service禁止firewall开机启动：systemctl disable firewalld.service修改主机文件修改主机名：仅在Masterhostnamectl set-hostname master仅在Slave1hostnamectl set-hostname slave1仅在Slave2hostnamectl set-hostname slave2修改hosts文件：vim /etc/hosts123456# 添加如下信息192.168.69.101 master 192.168.69.102 slave1 192.168.69.103 slave2 # 本地(可不加)192.168.69.1 clientSSH互信配置生成密钥对（公钥和私钥）–三次回车生成密钥：ssh-keygen -t rsa -P &#39;&#39;追加：cat ~/.ssh/id_rsa.pub &gt; ~/.ssh/authorized_keyschmod g-w ~chmod 700 ~/.sshchmod 600 ~/.ssh/authorized_keys追加密钥到Master：ssh [ 主机名 ] cat ~/.ssh/id_rsa.pub &gt;&gt; ~/.ssh/authorized_keys复制密钥到从节点：scp ~/.ssh/authorized_keys [ 主机名 ]:~/.ssh/authorized_keys设置vmware共享文件夹cd /mnt/hgfs/ 发现没有文件，解决如下安装工具：yum -y install open-vm-tools gcc gcc-c++ automake make kernel-devel git终端中输入如下命令：git clone https://github.com/rasa/vmware-tools-patches.gitcd vmware-tools-patches./patched-open-vm-tools.sh`查看分享目录：vmware-hgfsclientsu临时挂载分享目录：mount.vmhgfs .host:/ /mnt/hgfs/永久挂载分享目录：vmware-config-tools.pl -d --clobber-kernel-modules=vmhgfs#使用如下方法挂载有的会出错：vim /etc/fstab12# 末尾添加如下信息.host:/ /mnt/hgfs fuse.vmhgfs-fuse allow_other 0 0删除工具包cd ~rm -rf ~/vmware-tools-patchesreboot修改src权限cd /usr/localsudo chown -R alessa0:alessa0 srcsudo chown -R alessa0:alessa0 bin更改源为阿里云：cd /etc/yum.repos.d/mv CentOS-Base.repo CentOS-Base.repo.bakwget http://mirrors.aliyun.com/repo/Centos-7.repowget http://mirrors.163.com/.help/CentOS7-Base-163.repoyum clean allyum makecache安装网络工具包和基础工具包：sudo yum -y install net-tools checkpolicy gcc dkms foomatic openssh-server bash-completion psmiscHadoop集群组件列表组件masterslave1slave2jdk1.8.0_212√√√miniconda3√√√scala-2.11.12√√√hadoop-2.8.5√√√redis-5.0.4√zookeeper-3.4.14√√√spark-2.3.3-bin-hadoop2.7√√√mariadb/mariadb-server√apache-hive-2.3.4-bin√hbase-1.3.3√√√thrift-0.12.0√apache-flume-1.9.0-bin√√√kafka_2.11-2.2.0√√√apache-storm-1.2.2√√√Storm-on-Yarn√flink-1.8.0√√√推荐文章:Flink电商团购项目（一）傻瓜式CDH集群部署指南]]></content>
      <categories>
        <category>技术</category>
        <category>大数据</category>
        <category>环境搭建</category>
        <category>CentOS 7</category>
      </categories>
      <tags>
        <tag>BigData</tag>
        <tag>Hadoop环境搭建</tag>
        <tag>Vmware</tag>
      </tags>
  </entry>
</search>
